from aiogram.types import (
    ReplyKeyboardMarkup, KeyboardButton,
    InlineKeyboardMarkup, InlineKeyboardButton
)

from data import sqlite_db
from utils.utils import formatted_users_list, __toggle_btn, __toggle_main_recipients_btn
from utils.request import request_status_str

intro_admin_kb = ReplyKeyboardMarkup(resize_keyboard=True).add(
    KeyboardButton('üë®‚Äçüíª –£—á–∞—Å—Ç–Ω–∏–∫'),
    KeyboardButton('‚ò†Ô∏è –ê–¥–º–∏–Ω')
).add(
    KeyboardButton('üèÜüìà –¢–æ–ø—ã'),
)

intro_member_kb = ReplyKeyboardMarkup(resize_keyboard=True).add(
    KeyboardButton('üë®‚Äçüíª –£—á–∞—Å—Ç–Ω–∏–∫')
).add(
    KeyboardButton('üèÜüìà –¢–æ–ø—ã'),
)

member_menu_kb = ReplyKeyboardMarkup(resize_keyboard=True).add(
    KeyboardButton('üìù –ó–∞–ø—Ä–æ—Å'),
    KeyboardButton('üì© –û—Ç—á–µ—Ç–Ω–æ—Å—Ç—å')
).add(
    KeyboardButton('‚úèÔ∏è –†–µ–¥. –∑–∞–ø—Ä–æ—Å'),
    KeyboardButton('‚úèÔ∏è –†–µ–¥. –æ—Ç—á—ë—Ç–Ω–æ—Å—Ç—å')
).add(
    KeyboardButton('üè†–í—ã–π—Ç–∏')
)

admin_menu_kb = ReplyKeyboardMarkup(resize_keyboard=True).add(
    KeyboardButton('‚úÖ –î–æ–±–∞–≤–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞'),
    KeyboardButton('‚úÖ –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞')
).add(
    KeyboardButton('üìä –ù–∞—á–∏—Å–ª–∏—Ç—å –±–∞–ª–ª—ã'),
    KeyboardButton('üö´ –û—Ç–Ω—è—Ç—å –±–∞–ª–ª—ã')
).add(
    KeyboardButton('‚õîüë®‚Äçüíª –£–¥–∞–ª–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞'),
    KeyboardButton('‚õîüìù –£–¥–∞–ª–∏—Ç—å –∑–∞–ø—Ä–æ—Å')
).add(
    KeyboardButton('üè†–í—ã–π—Ç–∏'),
    KeyboardButton('‚Ü™Ô∏è–ö–∞–Ω–∞–ª—ã')
)

channels_kb = InlineKeyboardMarkup().add(
    InlineKeyboardButton(text='üìù –ó–∞–ø—Ä–æ—Å—ã', callback_data='edit_request_channel'),
    InlineKeyboardButton(text='üì© –û—Ç—á–µ—Ç–Ω–æ—Å—Ç—å', callback_data='edit_report_channel')
).add(
    InlineKeyboardButton(text='‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data='prev_step')
)

cancel_kb = ReplyKeyboardMarkup(resize_keyboard=True).add(
    KeyboardButton('üè†–í—ã–π—Ç–∏')
)

prev_step_kb = InlineKeyboardMarkup().add(
    InlineKeyboardButton(text='‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data='prev_step')
)
prev_step_reply_kb = ReplyKeyboardMarkup(resize_keyboard=True).add(
    KeyboardButton('‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥')
)

approve_promotion_kb = InlineKeyboardMarkup().add(
    InlineKeyboardButton(text='–î–∞', callback_data='approve_prom'),
    InlineKeyboardButton(text='–ù–µ—Ç', callback_data='refuse_prom')
)

approve_removing_request_kb = InlineKeyboardMarkup().add(
    InlineKeyboardButton(text='‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data='approve_rem_req'),
    InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='cancel_rem_req')
)


async def remove_member_kb(curr_users: list, member_index=None):
    buttons_list = []
    formatted_users = formatted_users_list(curr_users)
    for i in range(len(formatted_users)):
        if i == member_index:
            formatted_users[i] = formatted_users[i] + 'üî¥'
        buttons_list.append([InlineKeyboardButton(text=formatted_users[i], callback_data=f'rm_user_{i}')])
    buttons_list.append([InlineKeyboardButton(text='‚ùå –£–¥–∞–ª–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞', callback_data='approve_remove')])
    buttons_list.append([InlineKeyboardButton(text='‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data='prev_step')])
    return InlineKeyboardMarkup(inline_keyboard=buttons_list)


async def update_addressers_kb(curr_users: list, marked_members: list = None, cols=5):
    buttons_list = []
    button_row = []
    for i in range(len(curr_users)):
        btn_text = f'üî¥{i + 1}'
        if marked_members:
            if i in marked_members:
                button_row.append(InlineKeyboardButton(text=__toggle_btn(btn_text), callback_data=f'user_{i}'))
            else:
                button_row.append(InlineKeyboardButton(text=btn_text, callback_data=f'user_{i}'))
        else:
            button_row.append(InlineKeyboardButton(text=btn_text, callback_data=f'user_{i}'))
        if (i != 0 and i % (cols - 1) == 0) or i == len(curr_users) - 1:
            buttons_list.append(button_row)
            button_row = []
    buttons_list.append([InlineKeyboardButton(text='–î–∞–ª–µ–µ‚è©', callback_data='next_step')])
    buttons_list.append([InlineKeyboardButton(text='‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data='prev_step')])
    return InlineKeyboardMarkup(inline_keyboard=buttons_list)


async def update_recipients_kb(curr_users: list, user_indices: list = None, cols=5):
    buttons_list = []
    button_row = []
    for i in range(len(curr_users)):
        btn_text = f'üî¥{i + 1}'
        if user_indices:
            if i in user_indices:
                if user_indices[0] == i:
                    button_row.append(InlineKeyboardButton(text=__toggle_main_recipients_btn(btn_text),
                                                           callback_data=f'user_{i}'))
                else:
                    button_row.append(InlineKeyboardButton(text=__toggle_btn(btn_text), callback_data=f'user_{i}'))

            else:
                button_row.append(InlineKeyboardButton(text=btn_text, callback_data=f'user_{i}'))
        else:
            button_row.append(InlineKeyboardButton(text=btn_text, callback_data=f'user_{i}'))
        if (i != 0 and i % (cols - 1) == 0) or i == len(curr_users) - 1:
            buttons_list.append(button_row)
            button_row = []
    buttons_list.append([InlineKeyboardButton(text='–î–∞–ª–µ–µ‚è©', callback_data='next_step')])
    buttons_list.append([InlineKeyboardButton(text='‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data='prev_step')])
    return InlineKeyboardMarkup(inline_keyboard=buttons_list)


async def update_users_to_update_points(curr_users: list, marked_members_indices: list = None):
    buttons_list = []
    formatted_users = formatted_users_list(curr_users)
    for i in range(len(formatted_users)):
        if marked_members_indices and i in marked_members_indices:
            formatted_users[i] += 'üî¥'
        buttons_list.append([InlineKeyboardButton(text=formatted_users[i], callback_data=f'user_{i}')])
    buttons_list.append([InlineKeyboardButton(text='–î–∞–ª–µ–µ‚è©', callback_data='next_step')])
    buttons_list.append([InlineKeyboardButton(text='‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data='prev_step')])
    return InlineKeyboardMarkup(inline_keyboard=buttons_list)


def __list_of_elements_kb(elements: list):
    buttons_list = []
    for i, elm in enumerate(elements):
        buttons_list.append([InlineKeyboardButton(text=elm, callback_data=f'elm_{i}')])
    return InlineKeyboardMarkup(inline_keyboard=buttons_list)


async def members_list_kb():
    members = await sqlite_db.get_users()
    formatted_members = formatted_users_list(members)
    return __list_of_elements_kb(formatted_members).add(
        InlineKeyboardButton(text='‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data='prev_step')
    )


async def users_requests_kb(requests: list):
    requests_ids = [f'–ó–∞–ø—Ä–æ—Å #{req[0]} {request_status_str(req[2])[0]}' for req in requests]
    return __list_of_elements_kb(requests_ids).add(
        InlineKeyboardButton(text='‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data='prev_step')
    )


async def request_headers_kb():
    headers = ['–°—Ç–∞—Ç—É—Å', '–û—Ç –∫–æ–≥–æ', '–ö–æ–º—É', '–ó–∞–ø—Ä–æ—Å', '–°—Ä–æ–∫']
    return __list_of_elements_kb(headers).add(
        InlineKeyboardButton(text='‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data='prev_step')
    )


async def request_status_kb():
    statuses = ['‚ùå ‚Äî –ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ', 'üîÑ ‚Äî –í –ø—Ä–æ—Ü–µ—Å—Å–µ', '‚úÖ ‚Äî –í—ã–ø–æ–ª–Ω–µ–Ω–æ']
    return __list_of_elements_kb(statuses).add(
        InlineKeyboardButton(text='‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data='prev_step')
    )


def apply_tasks_kb():
    keyboard = InlineKeyboardMarkup().add(
        InlineKeyboardButton(text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data='apply_tasks'),
        InlineKeyboardButton(text='‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data='prev_step')
    )
    return keyboard


async def member_reports_kb(reports: list):
    reports_ids = [f'–û—Ç—á—ë—Ç #{req[0]}' for req in reports]
    return __list_of_elements_kb(reports_ids)


async def report_headers_kb():
    headers = [
        '–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ —Ç–µ–ª–µ—Ñ–æ–Ω–µ',
        '–í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏',
        '–ù–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏',
        '–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏'
    ]
    return __list_of_elements_kb(headers).add(
        InlineKeyboardButton(text='‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data='prev_step')
    )
